[global]
    monitor = 0

    follow = mouse

    origin = bottom-right
	offset = 20x20
    width = 300
    height = 200
    corner_radius = 10
    frame_width = 3
    separator_height = 3
    padding = 15
    horizontal_padding = 20
    idle_threshold = 120

	close_all = ctrl+shift+space
	history = mod1+grave

    notification_limit = 0
    indicate_hidden = yes
    stack_duplicates = true
    hide_duplicate_count = false

    # Sort messages by urgency.
    sort = yes

    font = SF Display 13

    line_height = 1

    markup = full

    #   %a  appname
    #   %s  summary
    #   %b  body
    #   %i  iconname (including its path)
    #   %I  iconname (without its path)
    #   %p  progress value if set ([  0%] to [100%]) or nothing
    #   %n  progress value if set without any extra characters
    format = "<b>%s</b> %p\n%b"
    alignment = left
    vertical_alignment = center

    show_age_threshold = 60

    word_wrap = yes

    progress_bar = true
    progress_bar_height = 8
    progress_bar_frame_width = 2
    progress_bar_min_width = 150
    progress_bar_max_width = 200

    enable_recursive_icon_lookup = true
    icon_theme = "Vimix-Amethyst, Vimix"
    icon_position = left
    min_icon_size = 24
    max_icon_size = 32

    ignore_newline = no
    show_indicators = yes

    sticky_history = no
    history_length = 20

    dmenu = /usr/bin/rofi -dmenu dunst:
    browser = /usr/bin/xdg-open
    always_run_script = true
    title = Dunst
    class = Dunst

    # Print a notification on startup.
    # This is mainly for error detection, since dbus (re-)starts dunst
    # automatically after a crash.
    # startup_notification = false

    # Manage dunst's desire for talking
    # Can be one of the following values:
    #  crit: Critical features. Dunst aborts
    #  warn: Only non-fatal warnings
    #  mesg: Important Messages
    #  info: all unimportant stuff
    # debug: all less than unimportant stuff
    # verbosity = mesg

    ignore_dbusclose = false
    force_xinerama = false

    mouse_left_click = close_current
    mouse_middle_click = close_all
    mouse_right_click = do_action

	frame_color = "#111111AA"
    separator_color = frame

[urgency_low]
    background = "#000000AA"
    foreground = "#22DDDD"
    timeout = 5
    icon = "dialog-information"

[urgency_normal]
    background = "#000000AA"
    foreground = "#eeeeee"
    timeout = 5
    icon = "bell"

[urgency_critical]
    background = "#000000AA"
    foreground = "#ff0000"
    timeout = 0
    icon = "flag"

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    timeout
#    urgency
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: if you don't want a notification to be displayed, set the format
# to "".
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    format = ""

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg 
[volume]
    appname = "amixer"
    timeout = 2
